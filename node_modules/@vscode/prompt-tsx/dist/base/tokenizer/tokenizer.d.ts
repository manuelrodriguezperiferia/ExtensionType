import { ChatMessage } from '../openai';
/**
 * Represents a tokenizer that can be used to tokenize text in chat messages.
 */
export interface ITokenizer {
    readonly _serviceBrand: undefined;
    readonly baseTokensPerMessage: number;
    readonly baseTokensPerName: number;
    readonly baseTokensPerCompletion: number;
    /**
     * Return the length of `text` in number of tokens.
     *
     * @param {str} text - The input text
     * @returns {number}
     */
    tokenLength(text: string): number;
    countMessageTokens(message: ChatMessage): number;
}
/**
 * The Cl100K BPE tokenizer for the `gpt-4`, `gpt-3.5-turbo`, and `text-embedding-ada-002` models.
 *
 * See https://github.com/microsoft/Tokenizer
 */
export declare class Cl100KBaseTokenizer implements ITokenizer {
    readonly _serviceBrand: undefined;
    private _cl100kTokenizer;
    readonly models: string[];
    readonly baseTokensPerMessage = 3;
    readonly baseTokensPerName = 1;
    readonly baseTokensPerCompletion = 3;
    constructor();
    /**
     * Tokenizes the given text using the Cl100K tokenizer.
     * @param text The text to tokenize.
     * @returns The tokenized text.
     */
    tokenize(text: string): number[];
    /**
     * Calculates the token length of the given text.
     * @param text The text to calculate the token length for.
     * @returns The number of tokens in the text.
     */
    tokenLength(text: string): number;
    /**
     * Counts tokens for a single chat message within a completion request.
     *
     * Follows https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb for GPT 3.5/4 models.
     *
     * **Note**: The result does not include base tokens for the completion itself.
     */
    countMessageTokens(message: ChatMessage): number;
    /**
     * Counts tokens for a completion request.
     *
     * Follows https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb for GPT 3.5/4 models.
     */
    countCompletionTokens(messages: ChatMessage[]): number;
    private initTokenizer;
}
